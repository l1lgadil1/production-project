{"version":3,"file":"main.fe86ccc89220cbb67762.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;;AAKA;AACA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AAAA;AAAA;AAIA;;AAdA;AAgBA","sources":["webpack://production-project/./src/app/providers/ThemeProvider/ui/ThemeProvider.tsx"],"sourcesContent":["import React, { FC, useMemo, useState } from 'react';\nimport { LOCAL_STORAGE_THEME_KEY, Theme, ThemeContext } from '../lib/ThemeContext';\n\nconst defaultTheme = localStorage.getItem(LOCAL_STORAGE_THEME_KEY) as Theme || Theme.LIGHT;\n\ninterface ThemeProviderProps{\n    initialTheme?:Theme\n}\nconst ThemeProvider: FC<ThemeProviderProps> = (props) => {\n    const { children } = propsl\n    const [theme, setTheme] = useState<Theme>(defaultTheme);\n\n    const defaultProps = useMemo(() => ({\n        theme,\n        setTheme,\n    }), [theme]);\n\n    return (\n        <ThemeContext.Provider value={defaultProps}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};\n\nexport default ThemeProvider;\n"],"names":[],"sourceRoot":""}