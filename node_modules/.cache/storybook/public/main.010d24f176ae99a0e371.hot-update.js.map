{"version":3,"file":"main.010d24f176ae99a0e371.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AADA;AAFA;AAUA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAHA;;AAQA;AAAA;AAAA;;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAHA;;AAQA;AAAA;AAAA;;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AAC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","sources":["webpack://production-project/./config/storybook/preview.js","webpack://production-project/./src/pages/AboutPage/ui/AboutPage.stories.tsx","webpack://production-project/./src/pages/MainPage/ui/MainPage.stories.tsx","webpack://production-project/./src/pages/NotFoundPage/ui/NotFoundPage.stories.tsx","webpack://production-project/./src/shared/ui/AppLink/AppLink.stories.tsx","webpack://production-project/./src/shared/ui/Button/Button.stories.tsx","webpack://production-project/./src/shared/ui/Loader/Loader.stories.tsx","webpack://production-project/./src/shared/ui/Modal/Modal.stories.tsx","webpack://production-project/./src/shared/ui/ThemeSwitcher/ui/ThemeSwitcher.stories.tsx","webpack://production-project/./src/widgets/ErrorPage/ui/ErrorPage.stories.tsx","webpack://production-project/./src/widgets/Navbar/ui/Navbar.stories.tsx","webpack://production-project/./src/widgets/Sidebar/ui/Sidebar/Sidebar.stories.tsx","webpack://production-project/./src/app/providers/ThemeProvider/index.ts","webpack://production-project/./src/app/providers/ThemeProvider/ui/ThemeProvider.tsx","webpack://production-project/./src/shared/config/storybook/ThemeDecorator/ThemeDecorator.tsx"],"sourcesContent":["import { addDecorator } from '@storybook/react';\nimport { StyleDecorator } from '../../src/shared/config/storybook/StyleDecorator/StyleDecorator';\nimport { ThemeDecorator } from '../../src/shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from '../../src/app/providers/ThemeProvider';\nimport { RouterDecorator } from '../../src/shared/config/storybook/RouterDecorator/RouterDecorator';\n\nexport const parameters = {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n        matchers: {\n            color: /(background|color)$/i,\n            date: /Date$/,\n        },\n    },\n};\n\naddDecorator(StyleDecorator);\naddDecorator(ThemeDecorator(Theme.LIGHT));\naddDecorator(RouterDecorator);\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\\nimport { Theme } from 'app/providers/ThemeProvider';\\nimport AboutPage from './AboutPage';\\n\\nexport default {\\n    title: 'pages/AboutPage',\\n    component: AboutPage,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n} as ComponentMeta<typeof AboutPage>;\\n\\nconst Template: ComponentStory<typeof AboutPage> = (args) => <AboutPage {...args} />;\\n\\nexport const Normal = Template.bind({});\\nNormal.args = {};\\n\\nexport const Dark = Template.bind({});\\nDark.args = {};\\nDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Normal\":{\"startLoc\":{\"col\":51,\"line\":15},\"endLoc\":{\"col\":84,\"line\":15},\"startBody\":{\"col\":51,\"line\":15},\"endBody\":{\"col\":84,\"line\":15}},\"Dark\":{\"startLoc\":{\"col\":51,\"line\":15},\"endLoc\":{\"col\":84,\"line\":15},\"startBody\":{\"col\":51,\"line\":15},\"endBody\":{\"col\":84,\"line\":15}}};\n    \nimport React from 'react';\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from 'app/providers/ThemeProvider';\nimport AboutPage from './AboutPage';\n\nexport default {\n    title: 'pages/AboutPage',\n    component: AboutPage,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n} as ComponentMeta<typeof AboutPage>;\n\nconst Template: ComponentStory<typeof AboutPage> = (args) => <AboutPage {...args} />;\n\nexport const Normal = Template.bind({});;\nNormal.args = {};\n\nexport const Dark = Template.bind({});\nDark.args = {};\nDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nNormal.parameters = { storySource: { source: \"(args) => <AboutPage {...args} />\" }, ...Normal.parameters };\nDark.parameters = { storySource: { source: \"(args) => <AboutPage {...args} />\" }, ...Dark.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\\nimport { Theme } from 'app/providers/ThemeProvider';\\nimport MainPage from './MainPage';\\n\\nexport default {\\n    title: 'pages/MainPage',\\n    component: MainPage,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n} as ComponentMeta<typeof MainPage>;\\n\\nconst Template: ComponentStory<typeof MainPage> = (args) => <MainPage {...args} />;\\n\\nexport const Normal = Template.bind({});\\nNormal.args = {};\\n\\nexport const Dark = Template.bind({});\\nDark.args = {};\\nDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Normal\":{\"startLoc\":{\"col\":50,\"line\":15},\"endLoc\":{\"col\":82,\"line\":15},\"startBody\":{\"col\":50,\"line\":15},\"endBody\":{\"col\":82,\"line\":15}},\"Dark\":{\"startLoc\":{\"col\":50,\"line\":15},\"endLoc\":{\"col\":82,\"line\":15},\"startBody\":{\"col\":50,\"line\":15},\"endBody\":{\"col\":82,\"line\":15}}};\n    \nimport React from 'react';\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from 'app/providers/ThemeProvider';\nimport MainPage from './MainPage';\n\nexport default {\n    title: 'pages/MainPage',\n    component: MainPage,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n} as ComponentMeta<typeof MainPage>;\n\nconst Template: ComponentStory<typeof MainPage> = (args) => <MainPage {...args} />;\n\nexport const Normal = Template.bind({});;\nNormal.args = {};\n\nexport const Dark = Template.bind({});\nDark.args = {};\nDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nNormal.parameters = { storySource: { source: \"(args) => <MainPage {...args} />\" }, ...Normal.parameters };\nDark.parameters = { storySource: { source: \"(args) => <MainPage {...args} />\" }, ...Dark.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\\nimport { Theme } from 'app/providers/ThemeProvider';\\nimport { NotFoundPage } from './NotFoundPage';\\n\\nexport default {\\n    title: 'pages/NotFoundPage',\\n    component: NotFoundPage,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n} as ComponentMeta<typeof NotFoundPage>;\\n\\nconst Template: ComponentStory<typeof NotFoundPage> = (args) => <NotFoundPage {...args} />;\\n\\nexport const Normal = Template.bind({});\\nNormal.args = {};\\n\\nexport const Dark = Template.bind({});\\nDark.args = {};\\nDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Normal\":{\"startLoc\":{\"col\":54,\"line\":15},\"endLoc\":{\"col\":90,\"line\":15},\"startBody\":{\"col\":54,\"line\":15},\"endBody\":{\"col\":90,\"line\":15}},\"Dark\":{\"startLoc\":{\"col\":54,\"line\":15},\"endLoc\":{\"col\":90,\"line\":15},\"startBody\":{\"col\":54,\"line\":15},\"endBody\":{\"col\":90,\"line\":15}}};\n    \nimport React from 'react';\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from 'app/providers/ThemeProvider';\nimport { NotFoundPage } from './NotFoundPage';\n\nexport default {\n    title: 'pages/NotFoundPage',\n    component: NotFoundPage,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n} as ComponentMeta<typeof NotFoundPage>;\n\nconst Template: ComponentStory<typeof NotFoundPage> = (args) => <NotFoundPage {...args} />;\n\nexport const Normal = Template.bind({});;\nNormal.args = {};\n\nexport const Dark = Template.bind({});\nDark.args = {};\nDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nNormal.parameters = { storySource: { source: \"(args) => <NotFoundPage {...args} />\" }, ...Normal.parameters };\nDark.parameters = { storySource: { source: \"(args) => <NotFoundPage {...args} />\" }, ...Dark.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\\nimport { Theme } from 'app/providers/ThemeProvider';\\nimport { AppLink, AppLinkTheme } from './AppLink';\\n\\nexport default {\\n    title: 'shared/AppLink',\\n    component: AppLink,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n    args: {\\n        to: '/',\\n    },\\n} as ComponentMeta<typeof AppLink>;\\n\\nconst Template: ComponentStory<typeof AppLink> = (args) => <AppLink {...args} />;\\n\\nexport const Primary = Template.bind({});\\nPrimary.args = {\\n    children: 'Text',\\n    theme: AppLinkTheme.PRIMARY,\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n    children: 'Text',\\n    theme: AppLinkTheme.SECONDARY,\\n};\\n\\nexport const Red = Template.bind({});\\nRed.args = {\\n    children: 'Text',\\n    theme: AppLinkTheme.RED,\\n};\\n\\nexport const PrimaryDark = Template.bind({});\\nPrimaryDark.args = {\\n    children: 'Text',\\n    theme: AppLinkTheme.PRIMARY,\\n};\\nPrimaryDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\\nexport const SecondaryDark = Template.bind({});\\nSecondaryDark.args = {\\n    children: 'Text',\\n    theme: AppLinkTheme.SECONDARY,\\n};\\nSecondaryDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\\nexport const RedDark = Template.bind({});\\nRedDark.args = {\\n    children: 'Text',\\n    theme: AppLinkTheme.RED,\\n};\\nRedDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":49,\"line\":18},\"endLoc\":{\"col\":80,\"line\":18},\"startBody\":{\"col\":49,\"line\":18},\"endBody\":{\"col\":80,\"line\":18}},\"Secondary\":{\"startLoc\":{\"col\":49,\"line\":18},\"endLoc\":{\"col\":80,\"line\":18},\"startBody\":{\"col\":49,\"line\":18},\"endBody\":{\"col\":80,\"line\":18}},\"Red\":{\"startLoc\":{\"col\":49,\"line\":18},\"endLoc\":{\"col\":80,\"line\":18},\"startBody\":{\"col\":49,\"line\":18},\"endBody\":{\"col\":80,\"line\":18}},\"PrimaryDark\":{\"startLoc\":{\"col\":49,\"line\":18},\"endLoc\":{\"col\":80,\"line\":18},\"startBody\":{\"col\":49,\"line\":18},\"endBody\":{\"col\":80,\"line\":18}},\"SecondaryDark\":{\"startLoc\":{\"col\":49,\"line\":18},\"endLoc\":{\"col\":80,\"line\":18},\"startBody\":{\"col\":49,\"line\":18},\"endBody\":{\"col\":80,\"line\":18}},\"RedDark\":{\"startLoc\":{\"col\":49,\"line\":18},\"endLoc\":{\"col\":80,\"line\":18},\"startBody\":{\"col\":49,\"line\":18},\"endBody\":{\"col\":80,\"line\":18}}};\n    \nimport React from 'react';\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from 'app/providers/ThemeProvider';\nimport { AppLink, AppLinkTheme } from './AppLink';\n\nexport default {\n    title: 'shared/AppLink',\n    component: AppLink,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n    args: {\n        to: '/',\n    },\n} as ComponentMeta<typeof AppLink>;\n\nconst Template: ComponentStory<typeof AppLink> = (args) => <AppLink {...args} />;\n\nexport const Primary = Template.bind({});;\nPrimary.args = {\n    children: 'Text',\n    theme: AppLinkTheme.PRIMARY,\n};\n\nexport const Secondary = Template.bind({});;\nSecondary.args = {\n    children: 'Text',\n    theme: AppLinkTheme.SECONDARY,\n};\n\nexport const Red = Template.bind({});;\nRed.args = {\n    children: 'Text',\n    theme: AppLinkTheme.RED,\n};\n\nexport const PrimaryDark = Template.bind({});;\nPrimaryDark.args = {\n    children: 'Text',\n    theme: AppLinkTheme.PRIMARY,\n};\nPrimaryDark.decorators = [ThemeDecorator(Theme.DARK)];\n\nexport const SecondaryDark = Template.bind({});;\nSecondaryDark.args = {\n    children: 'Text',\n    theme: AppLinkTheme.SECONDARY,\n};\nSecondaryDark.decorators = [ThemeDecorator(Theme.DARK)];\n\nexport const RedDark = Template.bind({});\nRedDark.args = {\n    children: 'Text',\n    theme: AppLinkTheme.RED,\n};\nRedDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <AppLink {...args} />\" }, ...Primary.parameters };\nSecondary.parameters = { storySource: { source: \"(args) => <AppLink {...args} />\" }, ...Secondary.parameters };\nRed.parameters = { storySource: { source: \"(args) => <AppLink {...args} />\" }, ...Red.parameters };\nPrimaryDark.parameters = { storySource: { source: \"(args) => <AppLink {...args} />\" }, ...PrimaryDark.parameters };\nSecondaryDark.parameters = { storySource: { source: \"(args) => <AppLink {...args} />\" }, ...SecondaryDark.parameters };\nRedDark.parameters = { storySource: { source: \"(args) => <AppLink {...args} />\" }, ...RedDark.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\n\\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\\nimport { Theme } from 'app/providers/ThemeProvider';\\nimport { Button, ThemeButton } from './Button';\\n\\nexport default {\\n    title: 'shared/Button',\\n    component: Button,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n} as ComponentMeta<typeof Button>;\\n\\nconst Template: ComponentStory<typeof Button> = (args) => <Button {...args} />;\\n\\nexport const Primary = Template.bind({});\\nPrimary.args = {\\n    children: 'Text',\\n};\\n\\nexport const Clear = Template.bind({});\\nClear.args = {\\n    children: 'Text',\\n    theme: ThemeButton.CLEAR,\\n};\\n\\nexport const Outline = Template.bind({});\\nOutline.args = {\\n    children: 'Text',\\n    theme: ThemeButton.OUTLINE,\\n};\\n\\nexport const OutlineDark = Template.bind({});\\nOutlineDark.args = {\\n    children: 'Text',\\n    theme: ThemeButton.OUTLINE,\\n};\\nOutlineDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":48,\"line\":16},\"endLoc\":{\"col\":78,\"line\":16},\"startBody\":{\"col\":48,\"line\":16},\"endBody\":{\"col\":78,\"line\":16}},\"Clear\":{\"startLoc\":{\"col\":48,\"line\":16},\"endLoc\":{\"col\":78,\"line\":16},\"startBody\":{\"col\":48,\"line\":16},\"endBody\":{\"col\":78,\"line\":16}},\"Outline\":{\"startLoc\":{\"col\":48,\"line\":16},\"endLoc\":{\"col\":78,\"line\":16},\"startBody\":{\"col\":48,\"line\":16},\"endBody\":{\"col\":78,\"line\":16}},\"OutlineDark\":{\"startLoc\":{\"col\":48,\"line\":16},\"endLoc\":{\"col\":78,\"line\":16},\"startBody\":{\"col\":48,\"line\":16},\"endBody\":{\"col\":78,\"line\":16}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\n\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from 'app/providers/ThemeProvider';\nimport { Button, ThemeButton } from './Button';\n\nexport default {\n    title: 'shared/Button',\n    component: Button,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n} as ComponentMeta<typeof Button>;\n\nconst Template: ComponentStory<typeof Button> = (args) => <Button {...args} />;\n\nexport const Primary = Template.bind({});;\nPrimary.args = {\n    children: 'Text',\n};\n\nexport const Clear = Template.bind({});;\nClear.args = {\n    children: 'Text',\n    theme: ThemeButton.CLEAR,\n};\n\nexport const Outline = Template.bind({});;\nOutline.args = {\n    children: 'Text',\n    theme: ThemeButton.OUTLINE,\n};\n\nexport const OutlineDark = Template.bind({});\nOutlineDark.args = {\n    children: 'Text',\n    theme: ThemeButton.OUTLINE,\n};\nOutlineDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Primary.parameters };\nClear.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Clear.parameters };\nOutline.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Outline.parameters };\nOutlineDark.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...OutlineDark.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\\nimport { Theme } from 'app/providers/ThemeProvider';\\nimport { Loader } from './Loader';\\n\\nexport default {\\n    title: 'shared/Loader',\\n    component: Loader,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n    args: {\\n        to: '/',\\n    },\\n} as ComponentMeta<typeof Loader>;\\n\\nconst Template: ComponentStory<typeof Loader> = (args) => <Loader {...args} />;\\n\\nexport const Normal = Template.bind({});\\nNormal.args = {};\\n\\nexport const Dark = Template.bind({});\\nDark.args = {};\\nDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Normal\":{\"startLoc\":{\"col\":48,\"line\":18},\"endLoc\":{\"col\":78,\"line\":18},\"startBody\":{\"col\":48,\"line\":18},\"endBody\":{\"col\":78,\"line\":18}},\"Dark\":{\"startLoc\":{\"col\":48,\"line\":18},\"endLoc\":{\"col\":78,\"line\":18},\"startBody\":{\"col\":48,\"line\":18},\"endBody\":{\"col\":78,\"line\":18}}};\n    \nimport React from 'react';\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from 'app/providers/ThemeProvider';\nimport { Loader } from './Loader';\n\nexport default {\n    title: 'shared/Loader',\n    component: Loader,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n    args: {\n        to: '/',\n    },\n} as ComponentMeta<typeof Loader>;\n\nconst Template: ComponentStory<typeof Loader> = (args) => <Loader {...args} />;\n\nexport const Normal = Template.bind({});;\nNormal.args = {};\n\nexport const Dark = Template.bind({});\nDark.args = {};\nDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nNormal.parameters = { storySource: { source: \"(args) => <Loader {...args} />\" }, ...Normal.parameters };\nDark.parameters = { storySource: { source: \"(args) => <Loader {...args} />\" }, ...Dark.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport {ComponentMeta, ComponentStory} from '@storybook/react';\\nimport {Modal} from \\\"shared/ui/Modal/Modal\\\";\\nimport {ThemeDecorator} from \\\"shared/config/storybook/ThemeDecorator/ThemeDecorator\\\";\\nimport {Theme} from \\\"app/providers/ThemeProvider\\\";\\n\\n\\nexport default {\\n    title: 'shared/Modal',\\n    component: Modal,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n} as ComponentMeta<typeof Modal>;\\n\\nconst Template: ComponentStory<typeof Modal> = (args) => <Modal {...args} />;\\n\\nexport const Primary = Template.bind({});\\nPrimary.args = {\\n    isOpen:true,\\n    children: 'Text',\\n};\\n\\nexport const Dark = Template.bind({});\\nDark.args = {\\n    isOpen:true,\\n}\\nDark.decorators = [ThemeDecorator(Theme.DARK)]\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":47,\"line\":16},\"endLoc\":{\"col\":76,\"line\":16},\"startBody\":{\"col\":47,\"line\":16},\"endBody\":{\"col\":76,\"line\":16}},\"Dark\":{\"startLoc\":{\"col\":47,\"line\":16},\"endLoc\":{\"col\":76,\"line\":16},\"startBody\":{\"col\":47,\"line\":16},\"endBody\":{\"col\":76,\"line\":16}}};\n    \nimport React from 'react';\nimport {ComponentMeta, ComponentStory} from '@storybook/react';\nimport {Modal} from \"shared/ui/Modal/Modal\";\nimport {ThemeDecorator} from \"shared/config/storybook/ThemeDecorator/ThemeDecorator\";\nimport {Theme} from \"app/providers/ThemeProvider\";\n\n\nexport default {\n    title: 'shared/Modal',\n    component: Modal,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n} as ComponentMeta<typeof Modal>;\n\nconst Template: ComponentStory<typeof Modal> = (args) => <Modal {...args} />;\n\nexport const Primary = Template.bind({});;\nPrimary.args = {\n    isOpen:true,\n    children: 'Text',\n};\n\nexport const Dark = Template.bind({});\nDark.args = {\n    isOpen:true,\n}\nDark.decorators = [ThemeDecorator(Theme.DARK)]\n\n\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Modal {...args} />\" }, ...Primary.parameters };\nDark.parameters = { storySource: { source: \"(args) => <Modal {...args} />\" }, ...Dark.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\\nimport { Theme } from 'app/providers/ThemeProvider';\\nimport { ThemeSwitcher } from './ThemeSwitcher';\\n\\nexport default {\\n    title: 'shared/ThemeSwitcher',\\n    component: ThemeSwitcher,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n} as ComponentMeta<typeof ThemeSwitcher>;\\n\\nconst Template: ComponentStory<typeof ThemeSwitcher> = (args) => <ThemeSwitcher {...args} />;\\n\\nexport const Normal = Template.bind({});\\nNormal.args = {};\\n\\nexport const Dark = Template.bind({});\\nDark.args = {};\\nDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Normal\":{\"startLoc\":{\"col\":55,\"line\":15},\"endLoc\":{\"col\":92,\"line\":15},\"startBody\":{\"col\":55,\"line\":15},\"endBody\":{\"col\":92,\"line\":15}},\"Dark\":{\"startLoc\":{\"col\":55,\"line\":15},\"endLoc\":{\"col\":92,\"line\":15},\"startBody\":{\"col\":55,\"line\":15},\"endBody\":{\"col\":92,\"line\":15}}};\n    \nimport React from 'react';\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from 'app/providers/ThemeProvider';\nimport { ThemeSwitcher } from './ThemeSwitcher';\n\nexport default {\n    title: 'shared/ThemeSwitcher',\n    component: ThemeSwitcher,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n} as ComponentMeta<typeof ThemeSwitcher>;\n\nconst Template: ComponentStory<typeof ThemeSwitcher> = (args) => <ThemeSwitcher {...args} />;\n\nexport const Normal = Template.bind({});;\nNormal.args = {};\n\nexport const Dark = Template.bind({});\nDark.args = {};\nDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nNormal.parameters = { storySource: { source: \"(args) => <ThemeSwitcher {...args} />\" }, ...Normal.parameters };\nDark.parameters = { storySource: { source: \"(args) => <ThemeSwitcher {...args} />\" }, ...Dark.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\n\\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\\nimport { Theme } from 'app/providers/ThemeProvider';\\nimport { ErrorPage } from './ErrorPage';\\n\\nexport default {\\n    title: 'widget/ErrorPage',\\n    component: ErrorPage,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n} as ComponentMeta<typeof ErrorPage>;\\n\\nconst Template: ComponentStory<typeof ErrorPage> = (args) => <ErrorPage {...args} />;\\n\\nexport const Light = Template.bind({});\\nLight.args = {};\\n\\nexport const Dark = Template.bind({});\\nDark.args = {};\\nDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Light\":{\"startLoc\":{\"col\":51,\"line\":16},\"endLoc\":{\"col\":84,\"line\":16},\"startBody\":{\"col\":51,\"line\":16},\"endBody\":{\"col\":84,\"line\":16}},\"Dark\":{\"startLoc\":{\"col\":51,\"line\":16},\"endLoc\":{\"col\":84,\"line\":16},\"startBody\":{\"col\":51,\"line\":16},\"endBody\":{\"col\":84,\"line\":16}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\n\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from 'app/providers/ThemeProvider';\nimport { ErrorPage } from './ErrorPage';\n\nexport default {\n    title: 'widget/ErrorPage',\n    component: ErrorPage,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n} as ComponentMeta<typeof ErrorPage>;\n\nconst Template: ComponentStory<typeof ErrorPage> = (args) => <ErrorPage {...args} />;\n\nexport const Light = Template.bind({});;\nLight.args = {};\n\nexport const Dark = Template.bind({});\nDark.args = {};\nDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nLight.parameters = { storySource: { source: \"(args) => <ErrorPage {...args} />\" }, ...Light.parameters };\nDark.parameters = { storySource: { source: \"(args) => <ErrorPage {...args} />\" }, ...Dark.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\n\\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\\nimport { Theme } from 'app/providers/ThemeProvider';\\nimport { Navbar } from './Navbar';\\n\\nexport default {\\n    title: 'widget/Navbar',\\n    component: Navbar,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n} as ComponentMeta<typeof Navbar>;\\n\\nconst Template: ComponentStory<typeof Navbar> = (args) => <Navbar {...args} />;\\n\\nexport const Light = Template.bind({});\\nLight.args = {};\\n\\nexport const Dark = Template.bind({});\\nDark.args = {};\\nDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Light\":{\"startLoc\":{\"col\":48,\"line\":16},\"endLoc\":{\"col\":78,\"line\":16},\"startBody\":{\"col\":48,\"line\":16},\"endBody\":{\"col\":78,\"line\":16}},\"Dark\":{\"startLoc\":{\"col\":48,\"line\":16},\"endLoc\":{\"col\":78,\"line\":16},\"startBody\":{\"col\":48,\"line\":16},\"endBody\":{\"col\":78,\"line\":16}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\n\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from 'app/providers/ThemeProvider';\nimport { Navbar } from './Navbar';\n\nexport default {\n    title: 'widget/Navbar',\n    component: Navbar,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n} as ComponentMeta<typeof Navbar>;\n\nconst Template: ComponentStory<typeof Navbar> = (args) => <Navbar {...args} />;\n\nexport const Light = Template.bind({});;\nLight.args = {};\n\nexport const Dark = Template.bind({});\nDark.args = {};\nDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nLight.parameters = { storySource: { source: \"(args) => <Navbar {...args} />\" }, ...Light.parameters };\nDark.parameters = { storySource: { source: \"(args) => <Navbar {...args} />\" }, ...Dark.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\n\\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\\nimport { Theme } from 'app/providers/ThemeProvider';\\nimport { Sidebar } from './Sidebar';\\n\\nexport default {\\n    title: 'widget/Sidebar',\\n    component: Sidebar,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n} as ComponentMeta<typeof Sidebar>;\\n\\nconst Template: ComponentStory<typeof Sidebar> = (args) => <Sidebar {...args} />;\\n\\nexport const Light = Template.bind({});\\nLight.args = {};\\n\\nexport const Dark = Template.bind({});\\nDark.args = {};\\nDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Light\":{\"startLoc\":{\"col\":49,\"line\":16},\"endLoc\":{\"col\":80,\"line\":16},\"startBody\":{\"col\":49,\"line\":16},\"endBody\":{\"col\":80,\"line\":16}},\"Dark\":{\"startLoc\":{\"col\":49,\"line\":16},\"endLoc\":{\"col\":80,\"line\":16},\"startBody\":{\"col\":49,\"line\":16},\"endBody\":{\"col\":80,\"line\":16}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\n\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from 'app/providers/ThemeProvider';\nimport { Sidebar } from './Sidebar';\n\nexport default {\n    title: 'widget/Sidebar',\n    component: Sidebar,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n} as ComponentMeta<typeof Sidebar>;\n\nconst Template: ComponentStory<typeof Sidebar> = (args) => <Sidebar {...args} />;\n\nexport const Light = Template.bind({});;\nLight.args = {};\n\nexport const Dark = Template.bind({});\nDark.args = {};\nDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nLight.parameters = { storySource: { source: \"(args) => <Sidebar {...args} />\" }, ...Light.parameters };\nDark.parameters = { storySource: { source: \"(args) => <Sidebar {...args} />\" }, ...Dark.parameters };","import ThemeProvider from './ui/ThemeProvider';\nimport { useTheme } from './lib/useTheme';\nimport { Theme } from './lib/ThemeContext';\n\nexport {\n    ThemeProvider,\n    useTheme,\n    Theme,\n};\n","import React, { FC, useMemo, useState } from 'react';\nimport { LOCAL_STORAGE_THEME_KEY, Theme, ThemeContext } from '../lib/ThemeContext';\n\nconst defaultTheme = localStorage.getItem(LOCAL_STORAGE_THEME_KEY) as Theme || Theme.LIGHT;\n\nconst ThemeProvider: FC = ({ children }) => {\n    const [theme, setTheme] = useState<Theme>(defaultTheme);\n\n    const defaultProps = useMemo(() => ({\n        theme,\n        setTheme,\n    }), [theme]);\n\n    return (\n        <ThemeContext.Provider value={defaultProps}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};\n\nexport default ThemeProvider;\n","import { Story } from '@storybook/react';\nimport {Theme, ThemeProvider} from 'app/providers/ThemeProvider';\n\nexport const ThemeDecorator = (theme: Theme) => (StoryComponent: Story) => (\n    <ThemeProvider>\n\n    <div className={`app ${theme}`}>\n        <StoryComponent />\n    </div>\n    </ThemeProvider>\n);\n"],"names":[],"sourceRoot":""}